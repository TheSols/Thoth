#ifndef KEYBUTTON_H
#define KEYBUTTON_H

#include <QWidget>
#include <QPushButton>
#include <QGridLayout>
#include "shiftsignal.h"
#include <QMouseEvent>
#include <QLineEdit>

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class KeyButton : public QPushButton  {
  Q_OBJECT

protected:
  QString letter;
  QString alternate;
  ShiftSignal &shift;
  QLineEdit *input = nullptr;

  void setHighlight(bool on, bool forShift);

public:
  KeyButton(QString letter, QString alt, ShiftSignal &shift);
  void setTarget(QLineEdit * lineedit);
  Q_SLOT
  virtual void shiftToggled();
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class SymbolButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  SymbolButton(QString s1, QString s2, ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class NumButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  NumButton(QString s1, QString s2, ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class LetterButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  LetterButton(QString s1, QString s2, ShiftSignal &shift);
  Q_SLOT
  void shiftToggled() override;
};


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class BackSpaceButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  BackSpaceButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class ClearButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  ClearButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class LeftButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  LeftButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class RightButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  RightButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AllButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  AllButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class LanguageButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  LanguageButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class AccentButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  AccentButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class TabButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  TabButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class SpaceButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  SpaceButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class EnterButton : public KeyButton{
  Q_OBJECT
  void onPressed();

public:
  EnterButton(ShiftSignal &shift);
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class ShiftButton : public KeyButton{
  Q_OBJECT
  void shiftToggled();
protected:
  void mouseDoubleClickEvent(QMouseEvent *);
public:
  ShiftButton(ShiftSignal &shift);

  Q_SLOT
  void onShift();
  Q_SLOT
  void shiftLock();

signals:
  void doubleClicked(bool lock);

};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class CapsButton : public KeyButton{
  Q_OBJECT
public:
  CapsButton(ShiftSignal &shift);
  Q_SLOT
  void onCaps();
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // KEYBUTTON_H
